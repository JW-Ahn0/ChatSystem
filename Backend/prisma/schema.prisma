// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UserProfile {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id           String   // 유저ID(이메일)
  nickname          String   // 유저닉네임
  position          String?  // 직무: [프론트엔드, 백엔드, 풀스택, IOS, 안드로이드, 데브옵스, PM, 마케터, 디자이너, 기획자]
  affiliation       String?  // 소속: [학생, 직장인, 프리랜서, 취업 준비생]
  interests         String?  // 관심 분야 (기술 스택): [TypeScript, Java, …]
  bio               String?  // 자기소개
  profile_image_url String?  // 프로필이미지
  like_post         String?  // 관심 포스트 리스트
  created_at        DateTime @default(now()) // 생성시간
  updated_at        DateTime @updatedAt // 수정시간
}

model Chat {
  chat_id    String   @id @default(auto()) @map("_id") @db.ObjectId // MongoDB ObjectId 사용
  room_id    String
  sender     String
  is_read    Boolean  @default(false)
  msg        String   @default("")
  created_at DateTime @default(now())

  @@index([room_id], name: "idx_room_id") // 채팅방 기준으로 인덱스 설정
  @@index([sender], name: "idx_sender")   // 보낸 사람 기준 인덱스
}

model ChatRoom {
  room_id    String   @id @default(auto()) @map("_id") @db.ObjectId // MongoDB ObjectId 사용
  user_list String[] // 배열로 참여 유저 ID 저장
}

model ChatUnread {
  user_id         String @id @map("_id") // 각 유저별 안 읽은 메시지 정보
  room_id         String
  unread_last_msg String?
  unread_msg_cnt  Int? @default(0)

  @@index([room_id], name: "idx_room_id_unread") // 채팅방별 인덱스 설정
}